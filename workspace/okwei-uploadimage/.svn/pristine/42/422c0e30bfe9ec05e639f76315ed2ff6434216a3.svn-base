package com.okwei.restful.utils;

import java.io.File;
import java.net.URL;
import java.net.URLDecoder;
import java.util.List;

import org.springframework.context.annotation.Configuration;

import com.okwei.restful.fastdfs.ClientGlobal;
import com.okwei.restful.fastdfs.StorageClient1;
import com.okwei.restful.vo.BackImgModle;

public class ImgProcess {

	// public static String domain = "";//
	// ConfigurationManager.AppSettings["domain"];
	// public static String upLoadTemp =
	// AppSettingUtil.getSingleValue("imgPathTemp");//临时文件

	/**
	 * 上传图片到本地（临时目录）
	 * 
	 * @return
	 */
	public BackImgModle uploadImgToLocal(String data, int type) {
		BackImgModle result = new BackImgModle();
		try {
			String imgsrc = ImageHelper.saveToStack(data, type);
			String resultString = uploadImgToFastFDS(imgsrc);
			result.setStatus(1);
			result.setImgUrl(imgsrc);
			result.setBaseModel(resultString);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return result;
	}

	/**
	 * 上传到 文件服务器（并删除临时文件）
	 * 
	 * @return
	 */
	public BackImgModle uploadImgToFastFDS(String data, int type) {
		return null;
	}

	public String uploadImgToFastFDS(String imgPath) {

		try {
			String filename = "fdfs_client.conf";
			URL url = Configuration.class.getClassLoader().getResource(filename);
			String str = url.getFile();
			// 转换编码
			str = URLDecoder.decode(str, "utf-8");
			ClientGlobal.init(str);

			StorageClient1 sc1 = new StorageClient1();
			NameValuePair[] meta_list = null; // new NameValuePair[0];
			// String imgFullPATH = imgPath;
			String tailer = imgPath.substring(imgPath.lastIndexOf(".") + 1);
			String fileid = "";
			// if(imgPath.lastIndexOf("_")>0){
			// String prefix_name = imgPath.substring(imgPath.lastIndexOf("_"));
			// prefix_name = prefix_name.replace("." + tailer, "");
			// fileid = sc1.upload_file1("",prefix_name,imgPath, tailer,
			// meta_list);
			// }else {
			fileid = sc1.upload_file1(imgPath, tailer, meta_list);
			// }
			File f = new File(imgPath);
			if (f.exists()) {
				f.delete();
			}
			List<String> imglist = ImageHelper.imglistPath(imgPath, 0);
			if (imglist != null && imglist.size() > 0) {
				for (String img : imglist) {
					if (img.lastIndexOf("_") > 0) {
						String prefix_name = img.substring(img.lastIndexOf("_"));
						prefix_name = prefix_name.replace("." + tailer, "");
						fileid = sc1.upload_file1(fileid, prefix_name, img, tailer, meta_list);
						File ff = new File(img);
						if (ff.exists()) {
							f.delete();
						}
					}
				}
			}

			return fileid;
		} catch (Exception ex) {
			ex.printStackTrace();
		}
		return "";
	}
}
