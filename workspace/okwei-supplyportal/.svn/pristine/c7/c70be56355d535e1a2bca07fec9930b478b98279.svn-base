package com.okwei.supplyportal.web;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.okwei.common.AjaxUtil;
import com.okwei.supplyportal.bean.vo.BaseSSOController;
import com.okwei.supplyportal.bean.vo.LoginUser;
import com.okwei.supplyportal.bean.vo.MsgResult;
import com.okwei.supplyportal.bean.vo.ProductPriceEditParam;
import com.okwei.supplyportal.service.IOrderManageService;
import com.okwei.util.ObjectUtils;

@Controller
@RequestMapping(value = "/order")
public class OrderAjaxController extends BaseSSOController
{
    @Autowired
    private IOrderManageService orderService;

    @ResponseBody
    @RequestMapping(value = "/orderajax",method =
    {RequestMethod.POST,RequestMethod.GET})
    public String orderajax(String key,String orderNo,String danhao,String kuaidi,String postage,String totalPrice,String kuaidiname)
    {
        String returnData = "";
        if(key == null || key == "" || orderNo == null || orderNo == "")
        {
            return AjaxUtil.ajaxSuccess("参数有误!");
        }
        LoginUser user = super.getLoginUser();
        if(user == null || user.getWeiID() != 0)
        {
            return AjaxUtil.ajaxSuccess("请登录!");
        }
        long weiid = user.getWeiID();
        switch(key)
        {
            case "delivery":// 发货
                returnData = delivery(orderNo,weiid,kuaidi,kuaidiname,danhao);
                break;
            case "updateorder":// 修改价格
                returnData = updateorder(weiid,postage,orderNo,totalPrice);
                break;

            case "confirmcargo":// 确认收货操作*
                // processId 流程ID
                break;
            case "refused":// 拒绝订单*
                // orderNo 订单ID
                break;
            case "delete":// 删除订单操作*
                // orderNo 删除订单号
                break;
            case "agreed":// 同意退款*
                // processId 退款流程ID
                break;
            case "notagreed":// 不同意退款*
                // processId 退款流程ID
                // msg 不同意理由
                break;
            case "confirmsh":// 确认收货地址*
                // cadid 地址ID
                // processId 退款流程ID
                break;
            case " finalpayment":// 支付尾款确认
                // orderNo
                break;

            default:
                return AjaxUtil.ajaxSuccess("参数有误!");
        }
        return AjaxUtil.ajaxSuccess(returnData);
    }

    /**
     * 修改价格
     */
    public String updateorder(long weiid,String postage,String supplyOrderId,String totalPrice)
    {
        if(ObjectUtils.isEmpty(postage) || ObjectUtils.isEmpty(supplyOrderId) || ObjectUtils.isEmpty(totalPrice))
        {
            return "参数有误";
        }
        ProductPriceEditParam param = new ProductPriceEditParam();
        param.setPostPrice(Double.parseDouble(postage));
        param.setSupplyOrderId(supplyOrderId);
        param.setTotalPrice(Double.parseDouble(totalPrice));
        param.setSupplyWeiid(weiid);
        MsgResult mResult = orderService.editProductPrice(param);
        return String.valueOf(mResult.getState());
    }

    /**
     * 发货
     */
    public String delivery(String supplyOrderid,long weiid,String dcomanpyNo,String deliveryCompany,String deliveryOrderNo)
    {
        MsgResult mr = orderService.sendGoods(supplyOrderid,weiid,dcomanpyNo,deliveryCompany,deliveryOrderNo);
        return String.valueOf(mr.getState());
    }
}
