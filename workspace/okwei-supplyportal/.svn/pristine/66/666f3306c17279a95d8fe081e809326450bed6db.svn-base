package com.okwei.supplyportal.web;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.okwei.common.Limit;
import com.okwei.common.PageResult;
import com.okwei.supplyportal.bean.dto.QueryParam;
import com.okwei.supplyportal.bean.vo.ParamOrderSearch;
import com.okwei.supplyportal.bean.vo.SupplyBookOrderStateCountVO;
import com.okwei.supplyportal.bean.vo.SupplyBookOrderVO;
import com.okwei.supplyportal.bean.vo.SupplyOrderCountSumVO;
import com.okwei.supplyportal.bean.vo.SupplyOrderStateCountVO;
import com.okwei.supplyportal.bean.vo.SupplyOrderVO;
import com.okwei.supplyportal.service.IOrderManageService;
import com.okwei.util.DateUtils;
import com.okwei.web.base.BaseController;

@Controller
@RequestMapping(value = "/order")
public class OrderController extends BaseController
{
    private final static Log logger = LogFactory.getLog(ProductMgtController.class);
    @Autowired
    private IOrderManageService orderService;

    @RequestMapping(value = "/test")
    public String list(@ModelAttribute("queryParam") QueryParam queryParam,@RequestParam(required = false,defaultValue = "1") int pageId,Model model)
    {
        logger.info("ProductMgtController list method starting............");
        PageResult<SupplyOrderVO> result = initlist();
        SupplyOrderCountSumVO sumVO = getCountSumVO((long) 1);
        model.addAttribute("pageResult",result);
        model.addAttribute("lingshowCount",sumVO.getLingshowCount());
        return "order/test";
    }

    /**
     * 零售，批发订单列表
     */
    @RequestMapping(value = "/buylist")
    public String buylist(@ModelAttribute("queryParam") ParamOrderSearch param,@RequestParam(required = false,defaultValue = "1") int pageId,
            @RequestParam(required = false,defaultValue = "1") int dt,@RequestParam(required = false,defaultValue = "-1") short ds,Model model)
    {
        long supplyWeiid = 1;
        // 开始时间
        if(param.getBeginTimeStr() != null && "" != param.getBeginTimeStr())
        {
            param.setBeginTime(DateUtils.format(param.getBeginTimeStr(),"yyyy-MM-dd HH:mm:ss"));
        }
        // 结束时间
        if(param.getEndTimeStr() != null && "" != param.getEndTimeStr())
        {
            param.setEndTime(DateUtils.format(param.getEndTimeStr(),"yyyy-MM-dd HH:mm:ss"));
        }
        param.setOrderType(dt);
        param.setState(ds);
        PageResult<SupplyOrderVO> result = orderService.getOrderListPageResult(param,supplyWeiid,Limit.buildLimit(pageId,10));
        SupplyOrderCountSumVO sorderTypeCount = orderService.getSupplyOrderCountSumVO(supplyWeiid);
        SupplyOrderStateCountVO sorderStateCount = orderService.getSupplyOrderStateCountVO(supplyWeiid,dt);
        model.addAttribute("pageRes",result);
        model.addAttribute("typeCount",sorderTypeCount);
        model.addAttribute("stateCount",sorderStateCount);
        return "order/buylist";
    }

    /**
     * 预订单列表
     */
    @RequestMapping(value = "/reservelist")
    public String reservelist(@ModelAttribute("queryParam") ParamOrderSearch param,@RequestParam(required = false,defaultValue = "1") int pageId,
            @RequestParam(required = false,defaultValue = "1") int dt,@RequestParam(required = false,defaultValue = "-1") short ds,Model model)
    {
        long supplyWeiid = 1;
        // 开始时间
        if(param.getBeginTimeStr() != null && "" != param.getBeginTimeStr())
        {
            param.setBeginTime(DateUtils.format(param.getBeginTimeStr(),"yyyy-MM-dd HH:mm:ss"));
        }
        // 结束时间
        if(param.getEndTimeStr() != null && "" != param.getEndTimeStr())
        {
            param.setEndTime(DateUtils.format(param.getEndTimeStr(),"yyyy-MM-dd HH:mm:ss"));
        }
        param.setOrderType(dt);
        param.setState(ds);
        PageResult<SupplyBookOrderVO> result = orderService.getBookOrderListPageResult(param,supplyWeiid,Limit.buildLimit(pageId,10));
        SupplyOrderCountSumVO sorderTypeCount = orderService.getSupplyOrderCountSumVO(supplyWeiid);
        SupplyBookOrderStateCountVO sorderStateCount = orderService.getSupplyBookOrderStateCountVO(supplyWeiid);
        model.addAttribute("pageRes",result);
        model.addAttribute("typeCount",sorderTypeCount);
        model.addAttribute("stateCount",sorderStateCount);
        return "order/reservelist";
    }

    private PageResult<SupplyOrderVO> initlist()
    {

        ParamOrderSearch param = new ParamOrderSearch();
        param.setOrderType(1);
        long supplyWeiid = 1;
        try
        {
            PageResult<SupplyOrderVO> pageResult = orderService.getOrderListPageResult(param,supplyWeiid,Limit.buildLimit(1,10));
            return pageResult;
        }
        catch(Exception e)
        {
            // TODO: handle exception
        }
        return null;
    }

    private SupplyOrderCountSumVO getCountSumVO(Long weiid)
    {
        String msg = "";
        try
        {
            return orderService.getSupplyOrderCountSumVO(weiid);
        }
        catch(Exception e)
        {
            // TODO: handle exception
            msg = e.getMessage();
        }
        return null;
    }
}
